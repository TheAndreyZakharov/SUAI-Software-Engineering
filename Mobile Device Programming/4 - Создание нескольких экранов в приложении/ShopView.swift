//
//  ShopView.swift
//  Laba
//
//  Created by –ê–Ω–¥—Ä–µ–π –ó–∞—Ö–∞—Ä–æ–≤ on 07.03.2024.
//

import SwiftUI

struct ShopView: View {
    @Binding var balance: Int
    @State private var showAlert = false
    @State private var alertTitle = ""
    
    // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö
    struct Product {
        var emoji: String
        var price: Int
        var count: Int
    }
    
    @State private var products: [Product] = [
        Product(emoji: "ü•§", price: 50, count: 0),
        Product(emoji: "üçî", price: 100, count: 0),
        Product(emoji: "üöó", price: 5000, count: 0),
        Product(emoji: "üè†", price: 10000, count: 0)
    ]
    
    var body: some View {
        VStack {
            Text("üé∞")
                .font(.largeTitle)
                .padding()
            Text("–ú–∞–≥–∞–∑–∏–Ω")
                .font(.title)
                .padding()
            Text("–ë–∞–ª–∞–Ω—Å: \(balance)ü™ô")
                .font(.title2)
                .padding()
            
            // –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
            ForEach($products.indices, id: \.self) { index in
                HStack {
                    Text(products[index].emoji)
                        .font(.largeTitle)
                        .frame(width: 50, alignment: .leading) // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –¥–ª—è —ç–º–æ–¥–∑–∏
                    Text("\(products[index].price)ü™ô")
                        .frame(width: 100, alignment: .leading) // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –¥–ª—è —Ü–µ–Ω
                    Button("–ö—É–ø–∏—Ç—å") {
                        buyProduct(index: index)
                    }
                    .padding(8)
                    .background(Color.blue) // –§–æ–Ω –∫–Ω–æ–ø–∫–∏
                    .foregroundColor(.white) // –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
                    .cornerRadius(8) // –°–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã
                    Spacer()
                    Text("x\(products[index].count)")
                }
                .padding()
            }
            
            Spacer()
        }
        .alert(isPresented: $showAlert) {
            Alert(title: Text(alertTitle), dismissButton: .default(Text("OK")))
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞
    func buyProduct(index: Int) {
        if products[index].price <= balance {
            balance -= products[index].price
            products[index].count += 1
        } else {
            alertTitle = "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏!"
            showAlert = true
        }
    }
}


// Preview section
// –í –∫–æ–Ω—Ü–µ —Ñ–∞–π–ª–∞ ShopView.swift

struct ShopView_Previews: PreviewProvider {
    // –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π @State –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –±–∞–ª–∞–Ω—Å–∞
    @State static var tempBalance = 10000
    
    static var previews: some View {
        // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–∏–≤—è–∑–∫–∏ –∫ tempBalance –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        ShopView(balance: $tempBalance)
    }
}
