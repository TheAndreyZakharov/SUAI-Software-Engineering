    .global _c_int00        ; точка входа
_c_int00:
    
    .data
array1: .byte 1, 2, 3, 4, 5 ; массив данных
size:   .set 5               ; размер массива

    .text
    MVK .S1 array1, A10      ; адрес первого элемента в A10
    || MVK .S2 array1, B10   ; адрес первого элемента в B10
    MVK .S2 size, B4         ; размер массива в B4
    SUB .L2 B4, 2, B4        ; число повторений (size - 2)
    || MVK .S2 2, B11        ; начальный офсет B11 = 2

    SHL .S1 B4, 31, A2       ; вычисляем сдвиг в A2
[A2] LDB .D1 *A10, A5        ; загружаем элемент массива в A5
    || [A2] LDB .D2 *B10[1], B5 ; загружаем элемент в B5
    NOP 4

[A2] MV .L2X A5, B6          ; перемещение данных из A5 в B6
    || [A2] MV .L1X B5, A6   ; перемещение данных из B5 в A6
[A2] STB .D1 A6, *A10        ; сохраняем A6 в A10
    || [A2] STB .D2 B6, *B10[1] ; сохраняем B6 в B10[1]

; ПРОВЕРКА ЧЁТНОСТИ ЧИСЛА ЭЛЕМЕНТОВ
; ЕСЛИ НЕЧЁТНО, ПЕРЕХОД В ЦИКЛ

LOOP:                        ; начало цикла
    LDB .D1 *A10[A11], A5    ; загрузка элемента в A5
    || LDB .D2 *B10[B11], B5 ; загрузка элемента в B5
    NOP 4

    MV .L2X A5, B6           ; перемещение A5 в B6
    || MV .L1X B5, A6        ; перемещение B5 в A6

    STB .D1 A6, *A10[A11]    ; запись A6 в A10[A11]
    || STB .D2 B6, *B10[B11] ; запись B6 в B10[B11]

    ADD .L1 A11, 1, A11      ; увеличение офсета A11 на 1
    || ADD .L2 B11, 1, B11   ; увеличение офсета B11 на 1

    CMPEQ .L2 B11, size, B2  ; проверка, если B11 >= size
[B2] MVK .S2 0, B11          ; если да, обнуляем B11

    || CMPEQ .L1 A11, B4, A0 ; проверка конца цикла
[!A0] B .S1 LOOP             ; переход в начало цикла, если не закончено
    NOP 5                    ; ожидание завершения

; ОКОНЧАНИЕ ЦИКЛА
